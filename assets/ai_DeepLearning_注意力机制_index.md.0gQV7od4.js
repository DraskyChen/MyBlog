import{_ as n,c as e,o as s,ag as t}from"./chunks/framework.C2Gjomh7.js";const h=JSON.parse('{"title":"注意力机制","description":"","frontmatter":{},"headers":[],"relativePath":"ai/DeepLearning/注意力机制/index.md","filePath":"ai/DeepLearning/注意力机制/index.md","lastUpdated":1756829839000}'),p={name:"ai/DeepLearning/注意力机制/index.md"};function i(o,a,l,r,c,d){return s(),e("div",null,[...a[0]||(a[0]=[t(`<h1 id="注意力机制" tabindex="-1">注意力机制 <a class="header-anchor" href="#注意力机制" aria-label="Permalink to &quot;注意力机制&quot;">​</a></h1><p>🏷️<code>chap_attention</code></p><p>灵长类动物的视觉系统接受了大量的感官输入， 这些感官输入远远超过了大脑能够完全处理的程度。 然而，并非所有刺激的影响都是相等的。 意识的聚集和专注使灵长类动物能够在复杂的视觉环境中将注意力引向感兴趣的物体，例如猎物和天敌。 只关注一小部分信息的能力对进化更加有意义，使人类得以生存和成功。</p><p>自19世纪以来，科学家们一直致力于研究认知神经科学领域的注意力。 本章的很多章节将涉及到一些研究。</p><p>首先回顾一个经典注意力框架，解释如何在视觉场景中展开注意力。 受此框架中的<em>注意力提示</em>（attention cues）的启发， 我们将设计能够利用这些注意力提示的模型。 1964年的Nadaraya-Waston核回归（kernel regression）正是具有 <em>注意力机制</em>（attention mechanism）的机器学习的简单演示。</p><p>然后继续介绍的是注意力函数，它们在深度学习的注意力模型设计中被广泛使用。 具体来说，我们将展示如何使用这些函数来设计<em>Bahdanau注意力</em>。 Bahdanau注意力是深度学习中的具有突破性价值的注意力模型，它双向对齐并且可以微分。</p><p>最后将描述仅仅基于注意力机制的<em>Transformer</em>架构， 该架构中使用了<em>多头注意力</em>（multi-head attention） 和<em>自注意力</em>（self-attention）。 自2017年横空出世，Transformer一直都普遍存在于现代的深度学习应用中， 例如语言、视觉、语音和强化学习领域。</p><div class="language-toc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toc</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>:maxdepth: 2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>attention-cues</span></span>
<span class="line"><span>nadaraya-waston</span></span>
<span class="line"><span>attention-scoring-functions</span></span>
<span class="line"><span>bahdanau-attention</span></span>
<span class="line"><span>multihead-attention</span></span>
<span class="line"><span>self-attention-and-positional-encoding</span></span>
<span class="line"><span>transformer</span></span></code></pre></div>`,8)])])}const _=n(p,[["render",i]]);export{h as __pageData,_ as default};
