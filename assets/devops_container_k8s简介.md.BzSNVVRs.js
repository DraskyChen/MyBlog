import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.C2Gjomh7.js";const l="/MyBlog/assets/k8s_arch.CGV7KTae.png",t="/MyBlog/assets/k8s_control_plane.BA-ShNs2.png",p="/MyBlog/assets/k8s_node.B8a-8uB2.png",h="/MyBlog/assets/k8s_pod.6wlkBhk_.png",k="/MyBlog/assets/k8s_cluster.Dx6lbQdJ.png",F=JSON.parse('{"title":"Kubernetes 学习笔记","description":"","frontmatter":{},"headers":[],"relativePath":"devops/container/k8s简介.md","filePath":"devops/container/k8s简介.md","lastUpdated":1756829839000}'),r={name:"devops/container/k8s简介.md"};function o(d,s,g,c,E,y){return n(),a("div",null,[...s[0]||(s[0]=[e('<h1 id="kubernetes-学习笔记" tabindex="-1">Kubernetes 学习笔记 <a class="header-anchor" href="#kubernetes-学习笔记" aria-label="Permalink to &quot;Kubernetes 学习笔记&quot;">​</a></h1><h2 id="_1-什么是-kubernetes" tabindex="-1">1. 什么是 Kubernetes？ <a class="header-anchor" href="#_1-什么是-kubernetes" aria-label="Permalink to &quot;1. 什么是 Kubernetes？&quot;">​</a></h2><ul><li><strong>Kubernetes (K8s)</strong> 是一个开源的容器编排平台，用于自动化容器化应用的 <strong>部署、扩展和管理</strong>。</li><li>最初由 Google 开发，后来捐赠给 CNCF（Cloud Native Computing Foundation）。</li><li>解决了 Docker 只提供单机容器运行的问题，提供了 <strong>集群管理</strong> 能力。</li></ul><hr><h2 id="_2-kubernetes-架构原理" tabindex="-1">2. Kubernetes 架构原理 <a class="header-anchor" href="#_2-kubernetes-架构原理" aria-label="Permalink to &quot;2. Kubernetes 架构原理&quot;">​</a></h2><p>K8s 是一个 <strong>主从（Master-Node）架构</strong>： <img src="'+l+'" alt="alt text"></p><h3 id="_2-1-控制平面-control-plane" tabindex="-1">2.1 控制平面（Control Plane） <a class="header-anchor" href="#_2-1-控制平面-control-plane" aria-label="Permalink to &quot;2.1 控制平面（Control Plane）&quot;">​</a></h3><p>负责整个集群的调度与管理。 <img src="'+t+'" alt="alt text"></p><ul><li><strong>API Server</strong>：集群的入口，所有操作通过它的 REST API。</li><li><strong>etcd</strong>：键值数据库，用于存储集群状态。</li><li><strong>Controller Manager</strong>：负责控制器逻辑，如副本数维护、节点管理等。</li><li><strong>Scheduler</strong>：负责 Pod 的调度（选择在哪个 Node 上运行）。</li></ul><h3 id="_2-2-工作节点-worker-node" tabindex="-1">2.2 工作节点（Worker Node） <a class="header-anchor" href="#_2-2-工作节点-worker-node" aria-label="Permalink to &quot;2.2 工作节点（Worker Node）&quot;">​</a></h3><p>负责运行实际应用。 <img src="'+p+`" alt="alt text"></p><ul><li><strong>Kubelet</strong>：每个节点的代理，负责和 API Server 通信，管理容器生命周期。</li><li><strong>Kube-proxy</strong>：实现服务发现和负载均衡，维护网络规则。</li><li><strong>Container Runtime</strong>：容器运行时（Docker、containerd、CRI-O）。</li></ul><h3 id="_2-3-架构图-简化" tabindex="-1">2.3 架构图（简化） <a class="header-anchor" href="#_2-3-架构图-简化" aria-label="Permalink to &quot;2.3 架构图（简化）&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>            [ Control Plane ]</span></span>
<span class="line"><span>   +----------------------------------+</span></span>
<span class="line"><span>   |  API Server | etcd | Scheduler   |</span></span>
<span class="line"><span>   |  Controller Manager              |</span></span>
<span class="line"><span>   +----------------------------------+</span></span>
<span class="line"><span></span></span>
<span class="line"><span>             |            |</span></span>
<span class="line"><span>         ----+------------+-----</span></span>
<span class="line"><span>             |            |</span></span>
<span class="line"><span>        [ Worker Node ]   [ Worker Node ]</span></span>
<span class="line"><span>   +-------------------+  +-------------------+</span></span>
<span class="line"><span>   | Kubelet | Proxy   |  | Kubelet | Proxy   |</span></span>
<span class="line"><span>   | Container Runtime |  | Container Runtime |</span></span>
<span class="line"><span>   +-------------------+  +-------------------+</span></span></code></pre></div><hr><h2 id="_3-kubernetes-核心概念" tabindex="-1">3. Kubernetes 核心概念 <a class="header-anchor" href="#_3-kubernetes-核心概念" aria-label="Permalink to &quot;3. Kubernetes 核心概念&quot;">​</a></h2><h3 id="_3-1-pod" tabindex="-1">3.1 Pod <a class="header-anchor" href="#_3-1-pod" aria-label="Permalink to &quot;3.1 Pod&quot;">​</a></h3><ul><li>最小的部署单元，可以包含一个或多个容器（共享网络和存储）。</li><li>生命周期短暂，经常被销毁和重新创建。 <img src="`+h+'" alt="alt text"></li></ul><h3 id="_3-2-cluster" tabindex="-1">3.2 Cluster <a class="header-anchor" href="#_3-2-cluster" aria-label="Permalink to &quot;3.2 Cluster&quot;">​</a></h3><p><img src="'+k+`" alt="alt text"> 定义：一个 Kubernetes 集群 就是一组运行着 Kubernetes 的机器（节点 Node），它们共同组成一个分布式系统。 组成部分：</p><ul><li>Master 节点（控制平面 Control Plane）：负责调度、API 管理、状态维护（相当于大脑）。</li><li>Worker 节点（工作节点 Node）：真正运行容器的地方。</li></ul><h3 id="_3-3-replicaset" tabindex="-1">3.3 ReplicaSet <a class="header-anchor" href="#_3-3-replicaset" aria-label="Permalink to &quot;3.3 ReplicaSet&quot;">​</a></h3><ul><li>确保某个 Pod 副本数始终保持在预期数量。</li><li>如果 Pod 崩溃，会自动拉起新的。</li></ul><h3 id="_3-4-deployment" tabindex="-1">3.4 Deployment <a class="header-anchor" href="#_3-4-deployment" aria-label="Permalink to &quot;3.4 Deployment&quot;">​</a></h3><ul><li>更高级的控制器，用于声明式更新应用。</li><li>支持版本回滚、滚动更新。</li></ul><h3 id="_3-5-service" tabindex="-1">3.5 Service <a class="header-anchor" href="#_3-5-service" aria-label="Permalink to &quot;3.5 Service&quot;">​</a></h3><ul><li><p>稳定的网络访问入口，解决 Pod IP 动态变化的问题。</p></li><li><p>类型：</p><ul><li><strong>ClusterIP</strong>：集群内部访问。</li><li><strong>NodePort</strong>：通过节点 IP:Port 访问。</li><li><strong>LoadBalancer</strong>：云厂商提供的外部负载均衡。</li></ul></li></ul><h3 id="_3-6-configmap-secret" tabindex="-1">3.6 ConfigMap &amp; Secret <a class="header-anchor" href="#_3-6-configmap-secret" aria-label="Permalink to &quot;3.6 ConfigMap &amp; Secret&quot;">​</a></h3><ul><li><strong>ConfigMap</strong>：存放配置（如环境变量、配置文件）。</li><li><strong>Secret</strong>：存放敏感数据（如密码、证书）。</li></ul><h3 id="_3-7-volume" tabindex="-1">3.7 Volume <a class="header-anchor" href="#_3-7-volume" aria-label="Permalink to &quot;3.7 Volume&quot;">​</a></h3><ul><li>数据存储抽象，用于持久化存储。</li><li>支持 NFS、云存储（EBS、GCE Persistent Disk）、本地存储等。</li></ul><h3 id="_3-8-namespace" tabindex="-1">3.8 Namespace <a class="header-anchor" href="#_3-8-namespace" aria-label="Permalink to &quot;3.8 Namespace&quot;">​</a></h3><ul><li>集群的逻辑隔离单位，用于多租户或资源划分。</li></ul><hr><h2 id="_4-kubernetes-yaml-配置" tabindex="-1">4. Kubernetes YAML 配置 <a class="header-anchor" href="#_4-kubernetes-yaml-配置" aria-label="Permalink to &quot;4. Kubernetes YAML 配置&quot;">​</a></h2><p>K8s 使用 <strong>YAML 文件</strong> 声明资源对象（声明式管理）。</p><h3 id="_4-1-pod-示例" tabindex="-1">4.1 Pod 示例 <a class="header-anchor" href="#_4-1-pod-示例" aria-label="Permalink to &quot;4.1 Pod 示例&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Pod</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-pod</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">myapp</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  containers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-container</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx:latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">containerPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span></code></pre></div><h3 id="_4-2-deployment-示例" tabindex="-1">4.2 Deployment 示例 <a class="header-anchor" href="#_4-2-deployment-示例" aria-label="Permalink to &quot;4.2 Deployment 示例&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 副本数</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    matchLabels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">myapp</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">myapp</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      containers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx:1.25</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">containerPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span></code></pre></div><h3 id="_4-3-service-示例" tabindex="-1">4.3 Service 示例 <a class="header-anchor" href="#_4-3-service-示例" aria-label="Permalink to &quot;4.3 Service 示例&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NodePort</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">myapp</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # Service 端口</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      targetPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Pod 容器端口</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      nodePort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30080</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 节点端口</span></span></code></pre></div><hr><h2 id="_5-kubernetes-常用命令" tabindex="-1">5. Kubernetes 常用命令 <a class="header-anchor" href="#_5-kubernetes-常用命令" aria-label="Permalink to &quot;5. Kubernetes 常用命令&quot;">​</a></h2><p>kubectl 是 Kubernetes 的命令行工具，用来与 Kubernetes 集群交互。 就像 git 对应 Git 仓库，kubectl 对应的就是 Kubernetes API Server。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看集群信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cluster-info</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看节点</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看所有 Pod</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pods</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 应用配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deployment.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除资源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deployment.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看 Pod 详细信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> describe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-pod</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入容器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-pod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看日志</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-pod</span></span></code></pre></div><hr><h2 id="_6-kubernetes-部署方式" tabindex="-1">6. Kubernetes 部署方式 <a class="header-anchor" href="#_6-kubernetes-部署方式" aria-label="Permalink to &quot;6. Kubernetes 部署方式&quot;">​</a></h2><ul><li><p><strong>minikube</strong>：本地单机集群，适合学习。</p></li><li><p><strong>kind</strong>（Kubernetes in Docker）：使用 Docker 启动 K8s 集群。</p></li><li><p><strong>云原生平台</strong>：</p><ul><li>GKE（Google）</li><li>EKS（AWS）</li><li>AKS（Azure）</li></ul></li><li><p><strong>生产环境</strong>：kubeadm、Rancher、OpenShift 等。</p></li></ul><hr><h2 id="_7-kubernetes-与-docker-的关系" tabindex="-1">7. Kubernetes 与 Docker 的关系 <a class="header-anchor" href="#_7-kubernetes-与-docker-的关系" aria-label="Permalink to &quot;7. Kubernetes 与 Docker 的关系&quot;">​</a></h2><ul><li>Docker：负责 <strong>单机容器运行</strong>。</li><li>Kubernetes：负责 <strong>容器编排和集群管理</strong>。</li><li>K8s 使用 <strong>Container Runtime Interface (CRI)</strong>，不仅支持 Docker，还支持 <strong>containerd</strong>、<strong>CRI-O</strong>。</li><li>2020 年后，K8s 官方宣布移除 Docker 作为默认运行时，但 Docker 依旧可以使用（通过 containerd）。</li></ul><hr><h2 id="_8-kubernetes-与-docker-swarm-的区别" tabindex="-1">8. Kubernetes 与 Docker Swarm 的区别 <a class="header-anchor" href="#_8-kubernetes-与-docker-swarm-的区别" aria-label="Permalink to &quot;8. Kubernetes 与 Docker Swarm 的区别&quot;">​</a></h2><ul><li><p><strong>Docker Swarm</strong></p><ul><li>Docker 自带的编排工具，简单易用。</li><li>功能有限，社区热度下降。</li></ul></li><li><p><strong>Kubernetes</strong></p><ul><li>功能强大（自动伸缩、服务发现、滚动更新等）。</li><li>复杂度更高，但已成为业界标准。</li></ul></li></ul>`,55)])])}const b=i(r,[["render",o]]);export{F as __pageData,b as default};
