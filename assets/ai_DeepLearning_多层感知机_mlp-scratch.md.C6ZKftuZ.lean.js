import{_ as p,c as t,o as h,ag as a,j as i,a as n}from"./chunks/framework.C2Gjomh7.js";const u=JSON.parse('{"title":"多层感知机的从零开始实现","description":"","frontmatter":{},"headers":[],"relativePath":"ai/DeepLearning/多层感知机/mlp-scratch.md","filePath":"ai/DeepLearning/多层感知机/mlp-scratch.md","lastUpdated":1756829839000}'),l={name:"ai/DeepLearning/多层感知机/mlp-scratch.md"},k={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},e={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"13.701ex",height:"1.717ex",role:"img",focusable:"false",viewBox:"0 -677 6056 759","aria-hidden":"true"};function d(r,s,E,g,o,y){return h(),t("div",null,[s[6]||(s[6]=a("",9)),i("p",null,[s[2]||(s[2]=n("回想一下，Fashion-MNIST中的每个图像由 ",-1)),i("mjx-container",k,[(h(),t("svg",e,[...s[0]||(s[0]=[a("",1)])])),s[1]||(s[1]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mn",null,"28"),i("mo",null,"×"),i("mn",null,"28"),i("mo",null,"="),i("mn",null,"784")])],-1))]),s[3]||(s[3]=n("个灰度像素值组成。 所有图像共分为10个类别。 忽略像素之间的空间结构， 我们可以将每个图像视为具有784个输入特征 和10个类的简单分类数据集。 首先，我们将[",-1)),s[4]||(s[4]=i("strong",null,"实现一个具有单隐藏层的多层感知机， 它包含256个隐藏单元",-1)),s[5]||(s[5]=n("]。 注意，我们可以将这两个变量都视为超参数。 通常，我们选择2的若干次幂作为层的宽度。 因为内存在硬件中的分配和寻址方式，这么做往往可以在计算上更高效。",-1))]),s[7]||(s[7]=a("",38))])}const F=p(l,[["render",d]]);export{u as __pageData,F as default};
